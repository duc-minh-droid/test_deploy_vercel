rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // USERS COLLECTION
    match /users/{uid} {
      allow read: if true;
      allow create, update: if request.auth != null && request.auth.uid == uid;
      allow delete: if false;

      // NOTIFICATIONS SUBCOLLECTION
      match /notifications/{notifId} {
        allow read, update: if request.auth != null && request.auth.uid == uid;
        allow create: if request.auth != null && request.auth.uid == uid;
      }
    }

    // POSTS COLLECTION
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null;

      // Allow updates only for likes count or if admin
      // Check which fields are being modified, not which fields exist in the final document
      allow update: if request.auth != null && (
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes']) ||
        request.auth.token.admin == true
      );

      allow delete: if false;

      // LIKES SUBCOLLECTION
      match /likes/{userId} {
        allow read: if true;
        allow create, delete: if request.auth != null && request.auth.uid == userId;
        allow update: if false;
      }
    }

    // DEFAULT DENY
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
